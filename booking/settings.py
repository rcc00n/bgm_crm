"""
Django settings for booking project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import sys
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-95j^j)=1j1+##1@=pp0q(@i65_&(q@_9rjod19i02qh(nry%-c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'core',
    'dal',
    'dal_select2',
    'storages',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'booking.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'booking.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Malva', # Change to your local DB name
        'USER': 'postgres', # Change to your local user name
        'PASSWORD': 'admin', # Change to your local user password
        'HOST': 'localhost',
        'PORT': '5433', # Change to the port that PostgreSQL is using
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Canada/Mountain'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [ BASE_DIR / "static" ]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Use S3 as default storage for uploaded media
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# AWS credentials
AWS_ACCESS_KEY_ID = 'AKIAQCVSVAFK5ORP5EJH'
AWS_SECRET_ACCESS_KEY = 'kzCeudgh7WN57v7nRtaWJ8WlaPR252mR/F6xRK55'
AWS_S3_SIGNATURE_NAME  = 's3v4'
# Your S3 bucket name
AWS_STORAGE_BUCKET_NAME = 'malvatest1'
AWS_S3_REGION_NAME = 'ca-central-1'
# Optional: Make files public
AWS_QUERYSTRING_AUTH = False

# Optional: Customize file URLs
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
# Optional: Specify custom domain (if you use CloudFront or static hosting)
# AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

# Media URL for S3
MEDIA_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.s3.ca-central-1.amazonaws.com/'

JAZZMIN_SETTINGS = {
    "site_title": "Malva Admin",
    "site_header": "Malva Health & Beauty",
    "welcome_sign": "Welcome to Malva",
    "copyright": "Malva ¬© 2025",
    "search_model": ["auth.User"],
    "show_sidebar": False,
    "navigation_expanded": True,
    "show_ui_builder": False,
    "hide_models": ["Groups"],
    # –¶–≤–µ—Ç–∞ —Ç–µ–º—ã (–º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å)
    "topmenu_links": [
        {"name": "Webpage", "url": "/", "permissions": ["auth.view_user"]},
    ],
    "icons": {
        # Django
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users-cog",

        # Core app
        "core.Appointment": "fas fa-calendar-check",
        "core.AppointmentStatus": "fas fa-info-circle",
        "core.AppointmentStatusHistory": "fas fa-history",
        "core.AppointmentPrepayment": "fas fa-coins",

        "core.ClientFile": "fas fa-file-alt",
        "core.Notification": "fas fa-bell",
        "core.Payment": "fas fa-money-check-alt",
        "core.PaymentMethod": "fas fa-credit-card",
        "core.PaymentStatus": "fas fa-receipt",

        "core.PrepaymentOption": "fas fa-percentage",

        "core.Role": "fas fa-user-tag",
        "core.UserRole": "fas fa-user-friends",

        "core.Service": "fas fa-spa",
        "core.ServiceMaster": "fas fa-user-cog",
    },
    "menu": [
    {
        "label": "üìÖ Appointments",
        "models": [
            "core.appointment",
            "core.appointmentstatus",
            "core.appointmentprepayment",
            "core.appointmentstatushistory",
        ],
    },
{
    "label": "üßë‚Äçüíº Users",
    "models": [
        "core.user",
        "core.userprofile",
        "core.role",
        "core.userrole",
        "core.clientfile",
    ],
},
{
    "label": "üí≥ Payments",
    "models": [
        "core.payment",
        "core.paymentstatus",
        "core.paymentmethod",
    ],
},
{
    "label": "üõéÔ∏è Services",
    "models": [
        "core.service",
        "core.servicemaster",
    ],
},
{
    "label": "üîî Notifications",
    "models": [
        "core.notification",
    ]
},
{
    "label": "üë®‚Äçüè´ Masters",
    "models": [
        "core.masterprofile",
        "core.masteravailability",
    ]
}
],
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": False,
    "accent": "accent-primary",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "custom_css": "admin/css/admin_custom.css"
}